# Depending upon which scheme you use (topaz or cypress) export the GemStone 3.4.0 Cypress packages
#
run
| scheme knownPackageNames allPackageNames repoUrl packageNames repo |
  scheme := 'topaz'.
  scheme := 'cypress'.
  packageNames := #('Cypress-Definitions' 'Cypress-Structure' 'Cypress-GemStoneFileServer' 'Cypress-Network-Url' 'Cypress-MesssageDigest' 'Cypress-Comparison' 'Cypress-PackageManagement').
  allPackageNames := knownPackageNames := #('Cypress-Comparison' 'Cypress-Definitions' 'Cypress-GemStoneFileServer' 'Cypress-MesssageDigest' 'Cypress-PackageManagement' 'Cypress-Structure' 'Cypress-Network-Url').
  repoUrl := scheme = 'topaz'
    ifTrue: [ 'topaz:$GS_HOME/shared/repos/CypressReferenceImplementation/topaz/' ]
    ifFalse: [ 'cypress:$GS_HOME/shared/repos/CypressReferenceImplementation/cypress/' ].
  packageNames
    do: [ :packageName | 
      (allPackageNames includes: packageName)
        ifFalse: [ self error: 'Unknown package name: ' , packageName ] ].
  packageNames isEmpty
    ifTrue: [ packageNames := knownPackageNames ].
  repo := CypressAbstractRepository
    onUrl: (CypressUrl absoluteFromText: repoUrl)
    alias: ''.
  packageNames
    do: [ :packageName | 
      Transcript
        cr;
        show: 'Writing ' , packageName printString.
      repo
        writePackageStructure:
          (CypressPackageStructure
            fromPackage: (CypressPackageDefinition named: packageName)) ]
%
